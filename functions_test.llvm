@.int_specifier_scan = constant [3 x i8] c"%d\00"
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.div_zero_error_msg = constant [23 x i8] c"Error division by zero\00"
@.global_string1 = constant [21 x i8] c"I am Printing String\00"

declare i32 @scanf(i8*, ...)
declare i32 @printf(i8*, ...)
declare void @exit(i32)

define i32 @readi(i32) {
  %ret_val = alloca i32
  %spec_ptr = getelementptr [3 x i8], [3 x i8]* @.int_specifier_scan, i32 0, i32 0
  call i32 (i8*, ...) @scanf(i8* %spec_ptr, i32* %ret_val)
  %val = load i32, i32* %ret_val
  ret i32 %val
}

define void @printi(i32) {
  %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
  call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
  ret void
}

define void @print(i8*) {
  %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
  call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
  ret void
}

define i32 @main() {
%vars_buffer = alloca [50 x i32]

%reg_1 = add i32 2, 0
%reg_2 = call i32 @readi(i32 %reg_1)
%var_3 = getelementptr [50 x i32], [50 x i32]* %vars_buffer, i32 0, i32 0
store i32 %reg_2, i32* %var_3
%var_4 = getelementptr [50 x i32], [50 x i32]* %vars_buffer, i32 0, i32 0
%reg_5 = load i32, i32* %var_4
call void @printi(i32 %reg_5)
call void @print(i8* getelementptr ([21 x i8], [21 x i8]* @.global_string1, i32 0, i32 0))
%var_6 = getelementptr [50 x i32], [50 x i32]* %vars_buffer, i32 0, i32 0
%reg_7 = load i32, i32* %var_6
%var_8 = getelementptr [50 x i32], [50 x i32]* %vars_buffer, i32 0, i32 1
store i32 %reg_7, i32* %var_8
%var_9 = getelementptr [50 x i32], [50 x i32]* %vars_buffer, i32 0, i32 1
%reg_10 = load i32, i32* %var_9
call void @printi(i32 %reg_10)
ret i32 0
}
