@.int_specifier_scan = constant [3 x i8] c"%d\00"
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.zero_div = constant [23 x i8] c"Error division by zero\00"

declare i32 @scanf(i8*, ...)
declare i32 @printf(i8*, ...)
declare void @exit(i32)

define i32 @readi(i32) {
  %ret_val = alloca i32
  %spec_ptr = getelementptr [3 x i8], [3 x i8]* @.int_specifier_scan, i32 0, i32 0
  call i32 (i8*, ...) @scanf(i8* %spec_ptr, i32* %ret_val)
  %val = load i32, i32* %ret_val
  ret i32 %val
}

define void @printi(i32) {
  %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
  call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
  ret void
}

define void @print(i8*) {
  %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
  call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
  ret void
}

define i32 @main() {
%fp = alloca [50 x i32]
%var1 = icmp eq i32 3, 0
br i1 %var1, label %label_2, label %label_3
label_2:
call i32 (i32*, ...) @printf(i32* getelementptr([23 x i32], [23 x i32]* @.zero_div, i32 0, i32 0))
call void @exit(i32 0)
br label %label_4
label_3:
%var0 = sdiv i32 6, 3
br label %label_4
label_4:
%var2= phi i32 [%var0, %label_3], [-1, %label_2]
%var4 = icmp eq i32 5, 0
br i1 %var4, label %label_5, label %label_6
label_5:
call i32 (i32*, ...) @printf(i32* getelementptr([23 x i32], [23 x i32]* @.zero_div, i32 0, i32 0))
call void @exit(i32 0)
br label %label_7
label_6:
%var3 = sdiv i32 200, 5
br label %label_7
label_7:
%var5= phi i32 [%var3, %label_6], [-1, %label_5]
%var6 = add i32 %var2, %var5
call void (i32) @printi(i32 %var7)
ret i32 0
}
